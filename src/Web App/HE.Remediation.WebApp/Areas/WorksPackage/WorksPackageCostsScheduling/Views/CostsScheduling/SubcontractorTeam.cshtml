@using HE.Remediation.Core.Enums;
@using GovUk.Frontend.AspNetCore.TagHelpers
@model HE.Remediation.WebApp.ViewModels.WorksPackage.WorkPackageCostsScheduling.SubcontractorTeamViewModel
@{
    ViewData["SubTitle"] = Model.BuildingName + " (" + Model.ApplicationReferenceNumber + ")";
    ViewData["Backlink"] = !string.IsNullOrWhiteSpace(Model.ReturnUrl) ? Model.ReturnUrl : Url.Action("RequiresSubcontractors", "CostsScheduling", new { Area = "WorksPackageCostsScheduling" });
    ViewData["ReadOnly"] = Model.IsSubmitted;
    ViewData["FullWidth"] = false;

    var isTeamMembersError = ViewData.ModelState.Any(x => x.Key == nameof(Model.Subcontractors));
}

@section ErrorSummary
    {
    <govuk-error-summary>
        <govuk-error-summary-item asp-for="Subcontractors" />
    </govuk-error-summary>
}

<h1 class="govuk-heading-xl">Tell us about the sub-contractors</h1>

<p class="govuk-body">
    We require details of up to the top four sub-contractors involved in this project.
</p>
<p class="govuk-body">
    You can add a maximum of four sub-contractors.
</p>

@using (Html.BeginForm())
{
    <div class="@(isTeamMembersError ? "govuk-form-group--error" : string.Empty)">

        @if (Model.Subcontractors == null || !Model.Subcontractors.Any())
        {
            <h2 class="govuk-heading-m">Sub-contractors</h2>
        }

        @if (isTeamMembersError)
        {
            <p class="govuk-error-message">
                Add a sub-contractor
            </p>
        }
        @if (Model.Subcontractors != null && Model.Subcontractors.Any())
        {
            <table class="govuk-table">
                <tbody class="govuk-table__body">
                    @foreach (var subcontractor in Model.Subcontractors.Select((info, index) => new { Info = info, Index = index + 1 }))
                    {
                        <tr class="govuk-table__row">
                            <td class="govuk-table__cell no-line-wrap govuk-table__header govuk-!-font-size-24 govuk-!-padding-top-9">Sub-contractor @subcontractor.Index</td>
                            <td class="govuk-table__cell no-line-wrap govuk-table__cell--numeric  govuk-!-padding-top-9">
                                @if (!Model.IsSubmitted)
                                {

                                    <a class="govuk-link govuk-!-margin-right-5" href="@Url.Action("Subcontractor", "CostsSchedulingSubcontractor", new { Area = "WorksPackageCostsScheduling", subcontractor.Info.SubcontractorId })">Change</a>
                                    <a class="govuk-link" href="@Url.Action("Remove", "CostsSchedulingSubcontractor", new { Area = "WorksPackageCostsScheduling", subcontractor.Info.SubcontractorId })">Remove</a>
                                }
                            </td>
                        </tr>
                        <tr class="govuk-table__row">
                            <td class="govuk-table__cell no-line-wrap govuk-table__header">Company registration number</td>
                            <td class="govuk-table__cell no-line-wrap">@subcontractor.Info.CompanyRegistration</td>
                        </tr>
                        <tr class="govuk-table__row">
                            <td class="govuk-table__cell no-line-wrap govuk-table__header">Company name</td>
                            <td class="govuk-table__cell no-line-wrap">@subcontractor.Info.CompanyName</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <div class="no-results bottom-highlight govuk-body">
                There are no sub-contractors to show
            </div>
        }
        @if (Model.Subcontractors == null || (Model.Subcontractors != null && Model.Subcontractors.Count < 4))
        {
            @if (!Model.IsSubmitted)
            {
                <govuk-button href="@Url.Action("Subcontractor", "CostsSchedulingSubcontractor")" class="govuk-button--secondary">Add sub-contractor</govuk-button>
            }
        }
    </div>
    <input asp-for="ReturnUrl" type="hidden" value="@Model.ReturnUrl" />
    <input asp-for="BuildingName" type="hidden" value="@Model.BuildingName" />
    <input asp-for="ApplicationReferenceNumber" type="hidden" value="@Model.ApplicationReferenceNumber" />
    <input asp-for="IsSubmitted" type="hidden" value="@Model.IsSubmitted" />

    @if (Model.Subcontractors != null && Model.Subcontractors.Any())
    {
        @foreach (var x in Model.Subcontractors.Select((value, index) => new { value, index }))
        {
            <input asp-for="@Model.Subcontractors[x.index].SubcontractorId" type="hidden" value="@Model.Subcontractors[x.index].SubcontractorId" />
            <input asp-for="@Model.Subcontractors[x.index].CompanyName" type="hidden" value="@Model.Subcontractors[x.index].CompanyName" />
            <input asp-for="@Model.Subcontractors[x.index].CompanyRegistration" type="hidden" value="@Model.Subcontractors[x.index].CompanyRegistration" />
        }
    }

    <div class="comp-btn-group">
        @if (!Model.IsSubmitted)
        {
            <govuk-button name="SubmitAction" value="@ESubmitAction.Continue">Save and continue</govuk-button>
            <govuk-button name="SubmitAction" value="@ESubmitAction.Exit" class="govuk-button--secondary">Save and return later</govuk-button>
        }
    </div>
}