@using HE.Remediation.Core.Enums;
@using GovUk.Frontend.AspNetCore.TagHelpers
@model HE.Remediation.WebApp.ViewModels.WorksPackage.WorkPackageCostsScheduling.RemoveSubcontractorViewModel
@{
    ViewData["Title"] = "Project team";
    ViewData["SubTitle"] = Model.BuildingName + " (" + Model.ApplicationReferenceNumber + ")";
    ViewData["Backlink"] = Url.Action("SubcontractorTeam", "CostsScheduling", new { Area = "WorksPackageCostsScheduling" });
    ViewData["ReadOnly"] = Model.IsSubmitted;
    ViewData["FullWidth"] = false;
}
@section ErrorSummary
    {
    <govuk-error-summary>
        <govuk-error-summary-item asp-for="Confirm" />
    </govuk-error-summary>
}

<h1 class="govuk-heading-xl">Are you sure you want to remove a sub-contractor from your team?</h1>

@using (Html.BeginForm())
{
    <govuk-radios name="Confirm" asp-for="Confirm">
        <govuk-radios-item disabled="@Model.IsSubmitted" value="@(true)">Yes</govuk-radios-item>
        <govuk-radios-item disabled="@Model.IsSubmitted" value="@(false)">No</govuk-radios-item>
    </govuk-radios>

    <input asp-for="SubcontractorId" type="hidden" value="@Model.SubcontractorId"/>
    <input asp-for="ApplicationReferenceNumber" type="hidden" value="@Model.ApplicationReferenceNumber"/>
    <input asp-for="BuildingName" type="hidden" value="@Model.BuildingName"/>
    <input asp-for="ReturnUrl" type="hidden" value="@Model.ReturnUrl"/>
    <input asp-for="IsSubmitted" type="hidden" value="@Model.IsSubmitted" />

    <div class="comp-btn-group">
        @if (!Model.IsSubmitted)
        {
            <govuk-button name="SubmitAction" value="@ESubmitAction.Continue">Save and continue</govuk-button>
            <govuk-button name="SubmitAction" value="@ESubmitAction.Exit" class="govuk-button--secondary">Save and return later</govuk-button>
        }
    </div>
}