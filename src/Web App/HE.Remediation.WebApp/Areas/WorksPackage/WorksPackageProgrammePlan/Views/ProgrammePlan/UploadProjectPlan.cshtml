@using HE.Remediation.Core.Enums
@model HE.Remediation.WebApp.ViewModels.WorksPackage.WorkPackageProgrammePlan.UploadProjectPlanViewModel

@{
    ViewData["Title"] = "Project plan";
    ViewData["SubTitle"] = Model.BuildingName + " (" + Model.ApplicationReferenceNumber + ")";
    ViewData["Backlink"] = Url.Action("HasProjectPlan", "ProgrammePlan", new { Area = "WorksPackageProgrammePlan" });
    ViewData["FullWidth"] = true;
}

@section ErrorSummary
{
    <govuk-error-summary>
        <govuk-error-summary-item asp-for="File" />
    </govuk-error-summary>
}

<h1 class="govuk-heading-xl">Upload your project plan</h1>

<p class="govuk-body">You have told us you have an agreed Project Plan setting out the delivery milestones and underlying activities/timescales. Please upload your plan.</p>

<form asp-area="WorksPackageProgrammePlan" asp-controller="ProgrammePlan" asp-action="UploadProjectPlan" method="post" enctype="multipart/form-data">
    
    <p class="govuk-caption-m">You can upload up to @Model.NumberOfFilesAllowed files.</p>
    <p class="govuk-caption-m">Each file must be smaller than 100mb.</p>

    @await Html.PartialAsync("~/Views/Shared/FileUpload.cshtml", Model)

    <input type="hidden" asp-for="ApplicationReferenceNumber" value="@Model.ApplicationReferenceNumber" />
    <input type="hidden" asp-for="BuildingName" value="@Model.BuildingName" />
    <input type="hidden" asp-for="IsSubmitted" value="@Model.IsSubmitted" />

    <div class="comp-btn-group">
        <govuk-button name="SubmitAction" disabled="@Model.IsSubmitted" value="@ESubmitAction.Continue">Save and continue</govuk-button>
        <govuk-button name="SubmitAction" disabled="@Model.IsSubmitted" value="@ESubmitAction.Exit" class="govuk-button--secondary">Save and return later</govuk-button>
    </div>
</form>