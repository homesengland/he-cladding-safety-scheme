@using HE.Remediation.Core.Extensions
@using HE.Remediation.WebApp.TagHelpers
@model HE.Remediation.WebApp.ViewModels.Application.ExistingApplicationViewModel

@{
    ViewData["Title"] = "View existing applications";
    string search = null;
    if (Context.Request.Query.TryGetValue("search", out var results))
    {
        search = results.FirstOrDefault();
    }
    else if (Context.Request.Query.TryGetValue("Search", out results))
    {
        search = results.FirstOrDefault();
    }
}

<div class="text-center">
    <div class="govuk-width-container">
        <a href="/Application/Dashboard" class="govuk-back-link">Back</a>
        <main class="govuk-main-wrapper">
            <h1 class="govuk-heading-xl">Manage active applications</h1>
            <p class="govuk-body">
                View all applications shared with you.
            </p>
            <p class="govuk-body">
                All applications are active unless you tell us your estimated works investigation completion date, estimated start on site date or estimated practical completion date are more than 12 months in the future. 
                Once pre tender financial support has been paid the application will remain active.
            </p>
            <p class="govuk-body">
                You can manage your programme via the Manage programme section.
            </p>
            <p class="govuk-body">
                Select the relevant building application number to view the building application page.
            </p>
            <form asp-area="Application" asp-controller="Dashboard" asp-action="ExistingApplications" method="get" class="govuk-grid-row">
                <div class="govuk-grid-row">
                    <div class="govuk-grid-column-one-full govuk-body margin-left-30">
                        <label for="search">Search by Application number or Building Name</label>
                        <input class="govuk-input govuk-!-width-one-third govuk-!-margin-right-6" id="search" name="search" value="@search" type="search" placeholder="Search by Application number or Building Name" />
                        <govuk-button type="submit">Search</govuk-button>
                        @{
                            var showHideText = Model.ShowFiltersValue ? "Hide" : "Show";
                        }
                        <govuk-button class="govuk-button govuk-button--secondary" type="submit" name="source" value="showFilters">@($"{showHideText} filters")</govuk-button>
                        <input asp-for="ShowFiltersValue" type="hidden" value="@Model.ShowFiltersValue" />
                    </div>
                </div>
                @if (Model.SelectedFilterStageOptions.Any() || Model.ShowFiltersValue)
                {
                    <div class="govuk-grid-row application-filter-border">
                        <div class="govuk-grid-column-three-quarters application-filter-bg">
                            <label class="govuk-label--s govuk-label padding-19-5" for="unselectedFilterStages">Filters:</label>
                        </div>
                        <div class="govuk-grid-column-one-quarter application-filter-bg clear-all-filters">
                            <a href="javascript:void(0);" class="govuk-link clear-filters">Clear filters</a>
                        </div>
                        @if(Model.SelectedFilterStageOptions.Any())
                        {
                            <div class="govuk-grid-row govuk-grid-column-full application-filter-bg">
                                @foreach (var selectedStageOption in Model.SelectedFilterStageOptions)
                                {
                                    <govuk-button name="unselectedFilterStages" class="govuk-button govuk-button--secondary remove-buttons" value="@selectedStageOption">✖ @selectedStageOption.GetFilterName()</govuk-button>
                                }
                                <input type="hidden" name="source" value="" />
                            </div>
                        }
                        @if (Model.ShowFiltersValue)
                        {
                            <div class="govuk-grid-row">
                                <div class="govuk-grid-column-one-half padding-left-30">
                                    <govuk-checkboxes name="selectedFilterStages" asp-for="SelectedFilterStageOptions">
                                        <govuk-checkboxes-fieldset>
                                            <govuk-checkboxes-fieldset-legend is-page-heading="true" class="govuk-label--s govuk-label margin-top-bottom-5">
                                                Stage
                                            </govuk-checkboxes-fieldset-legend>
                                        </govuk-checkboxes-fieldset>
                                        <govuk-checkboxes-hint>
                                            Please select all that apply.
                                        </govuk-checkboxes-hint>
                                        @foreach (var stageOption in Model.FilterStageOptions)
                                        {
                                            <govuk-checkboxes-item class="filter-check-boxes" checked="@Model.SelectedFilterStageOptions.Any(x => x == stageOption)" value="@stageOption">@stageOption.GetFilterName()</govuk-checkboxes-item>
                                        }
                                    </govuk-checkboxes>
                                    <govuk-button type="submit" name="source" value="applyFilters">Apply filters</govuk-button>
                                </div>
                            </div>
                        }
                        else
                        {
                            @foreach (var stageOption in Model.SelectedFilterStageOptions)
                            {
                                <input name="selectedFilterStages" type="hidden" value="@stageOption" />
                            }
                        }
                    </div>
                }

            </form>

            <table class="govuk-table">
                <thead class="govuk-table__head">
                    <tr class="govuk-table__row">
                        <th scope="col" class="govuk-table__header" style="width:5%">Scheme</th>
                        <th scope="col" class="govuk-table__header" style="width:15%">Building application ID</th>
                        <th scope="col" class="govuk-table__header" style="width:24%">Unique building name</th>
                        <th scope="col" class="govuk-table__header" style="width:13%">Date created</th>
                        <th scope="col" class="govuk-table__header" style="width:16%">Stage</th>
                        <th scope="col" class="govuk-table__header" style="width:17%">Status</th>
                    </tr>
                </thead>
                <tbody class="govuk-table__body">
                    @foreach (var application in Model.ApplicationList)
                    {
                        <tr class="govuk-table__row">
                            <td class="govuk-table__cell"><span class="govuk-tag govuk-tag--grey">@application.ApplicationScheme.GetEnumDisplayName()</span></td>
                            <td class="govuk-table__cell"><a class="govuk-link" href="@Url.Action("ExistingApplication", "Dashboard", new { Area = "Application", applicationId = @application.ApplicationId, applicationNumber = @application.ApplicationNumber })">@application.ApplicationNumber</a></td>
                            <td class="govuk-table__cell">@application.UniqueBuildingName</td>
                            <td class="govuk-table__cell">@application.DateCreated.ToString("dd/MM/yy")</td>
                            <td class="govuk-table__cell"><application-stage-text stage="@application.Stage" text-only="true"></application-stage-text></td>
                            <td class="govuk-table__cell"><application-status-badge status="@application.Status" wrap="true"></application-status-badge></td>
                        </tr>
                    }
                </tbody>
            </table>

            @{
                var filters = new Dictionary<string, IEnumerable<string>>();
                filters.Add("selectedFilterStages", Model.SelectedFilterStageOptions.Select(x => x.ToString()));
            }

            <results-small-pager
                current-page="@Model.CurrentPage" 
                page-count="@Model.PageCount" 
                search-parameter="@search" 
                uri-prefix="ExistingApplications" 
                show-filters="@Model.ShowFiltersValue"
                selected-filter-stages="filters" 
            />

        </main>
    </div>
</div>

@section BodyEnd
{
  <script src="~/js/gridFilters.js"></script>
}
