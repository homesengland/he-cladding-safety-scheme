@using HE.Remediation.Core.Enums
@using HE.Remediation.Core.Interface
@model HE.Remediation.WebApp.ViewModels.Location.PostCodeManualViewModel
@inject IApplicationDataProvider applicationDataProvider;
@{
    var isRasScheme = applicationDataProvider.GetApplicationScheme() == EApplicationScheme.ResponsibleActorsScheme;
    var titlePrefix = isRasScheme ? "As a Developer" : "As the Representative";
    ViewData["Title"] = $"{titlePrefix}, what is your company address?";
    ViewData["BackLink"] = Url.Action("RepresentationCompanyOrIndividualDetails", "ResponsibleEntities", new { Area = "ResponsibleEntities" });
}
@section ErrorSummary
{
    <govuk-error-summary>
        <govuk-error-summary-item asp-for="NameNumber"/>
        <govuk-error-summary-item asp-for="AddressLine1"/>
        <govuk-error-summary-item asp-for="AddressLine2"/>
        <govuk-error-summary-item asp-for="City"/>
        <govuk-error-summary-item asp-for="County"/>
        <govuk-error-summary-item asp-for="Postcode"/>
        <govuk-error-summary-item asp-for="CountryId" />
    </govuk-error-summary>
}
<h1 class="govuk-heading-xl">@ViewData["Title"]</h1>

<p class="govuk-body">If the details used to create your account are not relevant for this application, you can change the response below. </p>

@if(applicationDataProvider.GetApplicationScheme() != EApplicationScheme.ResponsibleActorsScheme) {
    <h2 class="govuk-heading-m">As the Representative, what is your company address?</h2>
}

<form asp-area="ResponsibleEntities" asp-controller="ResponsibleEntities" asp-action="RepresentationCompanyOrIndividualAddressDetails" method="post">
    <partial name="_AddressPartial" view-data="ViewData" />

    @if (!Model.IsRepresentativeUkBased.HasValue || (Model.IsRepresentativeUkBased.HasValue && Model.IsRepresentativeUkBased.Value))
    {
        <input type="hidden" name="CountryId" id="CountryId" value="1" />
    }
    else
    {
        <govuk-select asp-for="CountryId" name="CountryId" class="govuk-!-width-full" aria-label="Select Country">

            <govuk-select-label><b>Country</b></govuk-select-label>
            <govuk-select-item value="0">&nbsp;</govuk-select-item>
            @foreach (var currentCountry in Model.Countries)
            {
                <govuk-select-item value="@currentCountry.Id.ToString()">@currentCountry.Name</govuk-select-item>
            }
        </govuk-select>
    }


    @for (var currentCountry = 0; currentCountry < Model.Countries.Count; currentCountry++)
    {
        var location = Model.Countries[currentCountry];
        <input type="hidden" name="Countries[@currentCountry].Id" value="@location.Id.ToString()" />
        <input type="hidden" name="Countries[@currentCountry].Name" value="@location.Name" />
    }

    <input asp-for="ReturnUrl" type="hidden" value="@Model.ReturnUrl" />
    
    <div class="comp-btn-group">
        <govuk-button name="SubmitAction" value="@ESubmitAction.Continue">Save and continue</govuk-button>
        <govuk-button name="SubmitAction" value="@ESubmitAction.Exit" class="govuk-button--secondary">Save and return later</govuk-button>
    </div>

</form>