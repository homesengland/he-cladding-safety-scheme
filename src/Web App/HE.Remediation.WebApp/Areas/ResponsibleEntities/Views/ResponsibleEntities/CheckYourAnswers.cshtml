@using HE.Remediation.Core.Enums
@using HE.Remediation.Core.Interface
@model HE.Remediation.WebApp.ViewModels.ResponsibleEntities.CheckYourAnswersViewModel
@inject IApplicationDataProvider applicationDataProvider;
@{
    var isRas = applicationDataProvider.GetApplicationScheme() == EApplicationScheme.ResponsibleActorsScheme;
    var isSocialSector = applicationDataProvider.GetApplicationScheme() == EApplicationScheme.SocialSector;

    ViewData["Title"] = Model.ReadOnly ? "Your answers" : "Check your answers";
    ViewData["FullWidth"] = true;
    ViewData["ReturnUrl"] = "CheckYourAnswers";
    ViewData["BackLink"] = Url.Action("UploadEvidence", "ResponsibleEntities", new { Area = "ResponsibleEntities" });
    ViewData["ReadOnly"] = Model.ReadOnly;
    ViewData["BackLinkHidden"] = true;
}

<h1 class="govuk-heading-xl">@(Model.ReadOnly ? "Your answers" : "Check your answers")</h1>

@if (Model.RepresentationTypeId == (int)EApplicationRepresentationType.Representative)
{
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <p class="govuk-body govuk-!-font-size-24 govuk-!-font-weight-bold">
                @(isRas ? "Developer" : "Representative")
            </p>
        </div>
        @if (!Model.ReadOnly)
        {
            <div class="govuk-grid-column-one-third govuk-text-align-right">
                <a href=@Url.Action("ChangeAnswers", "ResponsibleEntities") class="govuk-link">Change your answers</a>
            </div>
        }
    </div>

    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
            <govuk-summary-list>

                @if (Model.RepresentativeUKBased.HasValue)
                {
                    <govuk-summary-list-row>
                        <govuk-summary-list-row-key>
                            As the @(isRas ? "Developer" : "Representative"), are you based in the UK?
                        </govuk-summary-list-row-key>
                        <govuk-summary-list-row-value>
                            @(Model.RepresentativeUKBased!.Value ? "Yes" : "No")
                        </govuk-summary-list-row-value>
                    </govuk-summary-list-row>
                }

                @if (Model.RepresentativeIndividualOrCompany is not null)
                {
                    <govuk-summary-list-row>
                        <govuk-summary-list-row-key>
                            Individual or company?
                        </govuk-summary-list-row-key>
                        <govuk-summary-list-row-value>
                            @Model.RepresentativeIndividualOrCompany
                        </govuk-summary-list-row-value>
                    </govuk-summary-list-row>
                }

                @if (Model.RepresentativeResponsibleEntityTypeId == (int)EResponsibleEntityType.Company)
                {
                    if (!string.IsNullOrEmpty(Model.RepresentativeCompanyDetails))
                    {
                        var details = Model.RepresentativeCompanyDetails.Split(',').ToList();

                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>
                                As the @(isRas ? "Developer" : "Representative"), what are your company details?
                            </govuk-summary-list-row-key>
                            <govuk-summary-list-row-value>
                                @foreach (var item in details)
                                { 
                                    <span>
                                        @item<br>
                                    </span>
                                }
                            </govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                    }
                }

                @if (!string.IsNullOrEmpty(Model.RepresentativeDetails))
                {
                    var details = Model.RepresentativeDetails.Split(',').ToList();

                    <govuk-summary-list-row>
                        <govuk-summary-list-row-key>
                            As the @(isRas ? "Developer" : "Representative"), what are your contact details?
                        </govuk-summary-list-row-key>
                        <govuk-summary-list-row-value>
                            @foreach (var item in details)
                            {
                                <span>
                                    @item<br>
                                </span>
                            }
                        </govuk-summary-list-row-value>
                    </govuk-summary-list-row>
                }

                @if (!string.IsNullOrEmpty(Model.RepresentativeAddress))
                {
                    var details = Model.RepresentativeAddress.Split(',').ToList();

                    <govuk-summary-list-row>
                        <govuk-summary-list-row-key>
                            As the @(isRas ? "Developer" : "Representative"), what is your company address?
                        </govuk-summary-list-row-key>
                        <govuk-summary-list-row-value>
                            @foreach (var item in details.Where(item => !string.IsNullOrWhiteSpace(item)))
                            {
                                <span>
                                    @item<br>
                                </span>
                            }
                        </govuk-summary-list-row-value>
                    </govuk-summary-list-row>
                }

            </govuk-summary-list>
        </div>
    </div>
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <p class="govuk-body govuk-!-font-size-24 govuk-!-font-weight-bold">
            Responsible Entity
        </p>
    </div>
    @if (!Model.ReadOnly)
    {
        <div class="govuk-grid-column-one-third govuk-text-align-right">
            <a href=@Url.Action("ChangeAnswers", "ResponsibleEntities") class="govuk-link">Change your answers</a>
        </div>
    }
</div>

<div class="govuk-grid-row">
<div class="govuk-grid-column-full">
<govuk-summary-list>

@if (Model.ResponsibleEntityRelation is not null)
{
    <govuk-summary-list-row>
        <govuk-summary-list-row-key>
            Responsible Entity relation
        </govuk-summary-list-row-key>
        <govuk-summary-list-row-value>
            @Model.ResponsibleEntityRelation
        </govuk-summary-list-row-value>
    </govuk-summary-list-row>
}

@if (Model.ResponsibleEntityCompanyType is not null)
{
    <govuk-summary-list-row>
        <govuk-summary-list-row-key>
            What type of company is the Responsible Entity?
        </govuk-summary-list-row-key>
        <govuk-summary-list-row-value>
            @Model.ResponsibleEntityCompanyType
        </govuk-summary-list-row-value>
    </govuk-summary-list-row>
}

@if (
    Model.ResponsibleEntityCompanyTypeId == (int)EApplicationResponsibleEntityOrganisationType.PrivateCompany ||
    Model.ResponsibleEntityCompanyTypeId == (int)EApplicationResponsibleEntityOrganisationType.RightToManageCompany ||
    Model.ResponsibleEntityCompanyTypeId == (int)EApplicationResponsibleEntityOrganisationType.ResidentLedOrganisation ||
    Model.ResponsibleEntityCompanyTypeId == (int)EApplicationResponsibleEntityOrganisationType.RegisteredProvider ||
    Model.ResponsibleEntityCompanyTypeId == (int)EApplicationResponsibleEntityOrganisationType.LocalAuthority || 
    (
        Model.ResponsibleEntityCompanyTypeId == (int)EApplicationResponsibleEntityOrganisationType.Other &&
        Model.ResponsibleEntityCompanySubTypeId != (int)EApplicationResponsibleEntityOrganisationSubType.Individual
        )
    )
{
    @if (Model.ResponsibleEntityRegisteredInUK.HasValue)
    {
        <govuk-summary-list-row>
            <govuk-summary-list-row-key>
                Is the Responsible Entity incorporated in the UK?
            </govuk-summary-list-row-key>
            <govuk-summary-list-row-value>
                @(Model.ResponsibleEntityRegisteredInUK!.Value ? "Yes" : "No")
            </govuk-summary-list-row-value>
        </govuk-summary-list-row>
    }

    if (!string.IsNullOrEmpty(Model.ResponsibleEntityCompanyDetails))
    {
        var details = Model.ResponsibleEntityCompanyDetails.Split(',').ToList();

        <govuk-summary-list-row>
            <govuk-summary-list-row-key>
                What are the company details of the Responsible Entity?
            </govuk-summary-list-row-key>
            <govuk-summary-list-row-value>
                @foreach (var item in details)
                {
                    <span>
                        @item<br>
                    </span>
                }
            </govuk-summary-list-row-value>
        </govuk-summary-list-row>
    }

    if (!string.IsNullOrEmpty(Model.ResponsibleEntityOrganisationDetails))
    {
        var details = Model.ResponsibleEntityOrganisationDetails.Split(',').ToList();

        <govuk-summary-list-row>
            <govuk-summary-list-row-key>
                What are the organisation details of the Responsible Entity?
            </govuk-summary-list-row-key>
            <govuk-summary-list-row-value>
                @foreach (var item in details)
                {
                    <span>
                        @item<br>
                    </span>
                }
            </govuk-summary-list-row-value>
        </govuk-summary-list-row>
    }

    if (!string.IsNullOrEmpty(Model.ResponsibleEntityCompanyAddress))
    {
        var details = Model.ResponsibleEntityCompanyAddress.Split(',').ToList();

        <govuk-summary-list-row>
            <govuk-summary-list-row-key>
                What is the Responsible Entity's company address?
            </govuk-summary-list-row-key>
            <govuk-summary-list-row-value>
                @foreach (var item in details.Where(item => !string.IsNullOrWhiteSpace(item)))
                {
                    <span>
                        @item<br>
                    </span>
                }
            </govuk-summary-list-row-value>
        </govuk-summary-list-row>
    }

    if (!string.IsNullOrEmpty(Model.ResponsibleEntityPrimaryContact))
    {
        var details = Model.ResponsibleEntityPrimaryContact.Split(',').ToList();

        <govuk-summary-list-row>
            <govuk-summary-list-row-key>
                Who is the primary contact at the Responsible Entity?
            </govuk-summary-list-row-key>
            <govuk-summary-list-row-value>
                @foreach (var item in details)
                {
                    <span>
                        @item<br>
                    </span>
                }
            </govuk-summary-list-row-value>
        </govuk-summary-list-row>
    }

    @if (Model.RepresentEvidenceFiles.Any())
    {
        <govuk-summary-list-row>
            <govuk-summary-list-row-key>
                Upload evidence of authorisation
            </govuk-summary-list-row-key>
            <govuk-summary-list-row-value>
                @foreach (var item in Model.RepresentEvidenceFiles)
                {
                    <span>
                        @item.Name<br>
                    </span>
                }
            </govuk-summary-list-row-value>
        </govuk-summary-list-row>
    }
}

@if (
    Model.ResponsibleEntityCompanyTypeId is (int)EApplicationResponsibleEntityOrganisationType.Other &&
    Model.ResponsibleEntityCompanySubTypeId is (int)EApplicationResponsibleEntityOrganisationSubType.Individual
    )
{
    @if (Model.ResponsibleEntityRegisteredInUK.HasValue)
    {
        <govuk-summary-list-row>
            <govuk-summary-list-row-key>
                Is the Responsible Entity incorporated in the UK?
            </govuk-summary-list-row-key>
            <govuk-summary-list-row-value>
                @(Model.ResponsibleEntityRegisteredInUK.Value ? "Yes" : "No")
            </govuk-summary-list-row-value>
        </govuk-summary-list-row>
    }

    if (!string.IsNullOrEmpty(Model.ResponsibleEntityPrimaryContact))
    {
        var details = Model.ResponsibleEntityPrimaryContact.Split(',').ToList();

        <govuk-summary-list-row>
            <govuk-summary-list-row-key>
                Who is the primary contact at the Responsible Entity?
            </govuk-summary-list-row-key>
            <govuk-summary-list-row-value>
                @foreach (var item in details)
                {
                    <span>
                        @item<br>
                    </span>
                }
            </govuk-summary-list-row-value>
        </govuk-summary-list-row>
    }

    @if (Model.RepresentEvidenceFiles.Any())
    {
        <govuk-summary-list-row>
            <govuk-summary-list-row-key>
                Upload evidence of authorisation
            </govuk-summary-list-row-key>
            <govuk-summary-list-row-value>
                @foreach (var item in Model.RepresentEvidenceFiles)
                {
                    <span>
                        @item.Name<br>
                    </span>
                }
            </govuk-summary-list-row-value>
        </govuk-summary-list-row>
    }
}

@if (Model.ResponsibleEntityCompanyTypeId == (int)EApplicationResponsibleEntityOrganisationType.RegisteredProvider)
{
    @if (Model.ResponsibleEntitySharedOwners is not null)
    {
        <govuk-summary-list-row>
            <govuk-summary-list-row-key>
                How many shared owners
            </govuk-summary-list-row-key>
            <govuk-summary-list-row-value>
                @Model.ResponsibleEntitySharedOwners
            </govuk-summary-list-row-value>
        </govuk-summary-list-row>
    }

    @if (Model.ResponsibleEntityClaimingGrant.HasValue)
    {
        <govuk-summary-list-row>
            <govuk-summary-list-row-key>
                Are you claiming a grant for the affordable units on the grounds of the works not being affordable to your organisation
            </govuk-summary-list-row-key>
            <govuk-summary-list-row-value>
                @(Model.ResponsibleEntityClaimingGrant!.Value ? "Yes" : "No")
            </govuk-summary-list-row-value>
        </govuk-summary-list-row>
    }

    @if (Model.ConfirmedNotViable.HasValue)
    {
        <govuk-summary-list-row>
            <govuk-summary-list-row-key>
                Has the Chief Executive confirmed that remediation works are not affordable?
            </govuk-summary-list-row-key>
            <govuk-summary-list-row-value>
                @(Model.ConfirmedNotViable!.Value ? "Yes" : "No")
            </govuk-summary-list-row-value>
        </govuk-summary-list-row>
    }

    @if (Model.CheifExecEvidenceFiles.Any())
    {
        <govuk-summary-list-row>
            <govuk-summary-list-row-key>
                Please provide evidence from the Chief Executive
            </govuk-summary-list-row-key>
            <govuk-summary-list-row-value>
                @foreach (var item in Model.CheifExecEvidenceFiles)
                {
                    <span>
                        @item.Name<br>
                    </span>
                }
            </govuk-summary-list-row-value>
        </govuk-summary-list-row>
    }
}

@if (Model.ResponsibleEntityCompanyTypeId == (int)EApplicationResponsibleEntityOrganisationType.LocalAuthority)
{
    @if (Model.ResponsibleEntitySharedOwners is not null)
    {
        <govuk-summary-list-row>
            <govuk-summary-list-row-key>
                How many shared owners
            </govuk-summary-list-row-key>
            <govuk-summary-list-row-value>
                @Model.ResponsibleEntitySharedOwners
            </govuk-summary-list-row-value>
        </govuk-summary-list-row>
    }

    @if (Model.ResponsibleEntityClaimingGrant.HasValue)
    {
        <govuk-summary-list-row>
            <govuk-summary-list-row-key>
                Are you claiming a grant for the affordable units on the grounds of the works not being affordable to your organisation
            </govuk-summary-list-row-key>
            <govuk-summary-list-row-value>
                @(Model.ResponsibleEntityClaimingGrant!.Value ? "Yes" : "No")
            </govuk-summary-list-row-value>
        </govuk-summary-list-row>
    }

    @if (Model.ConfirmedNotViable.HasValue)
    {
        <govuk-summary-list-row>
            <govuk-summary-list-row-key>
                Has the Section 151 (S151) officer confirmed that these remediation works are not affordable?
            </govuk-summary-list-row-key>
            <govuk-summary-list-row-value>
                @(Model.ConfirmedNotViable!.Value ? "Yes" : "No")
            </govuk-summary-list-row-value>
        </govuk-summary-list-row>
    }

    @if (Model.S151EvidenceFiles.Any())
    {
        <govuk-summary-list-row>
            <govuk-summary-list-row-key>
                Please provide evidence from the S151 officer
            </govuk-summary-list-row-key>
            <govuk-summary-list-row-value>
                @foreach (var item in Model.S151EvidenceFiles)
                {
                    <span>
                        @item.Name<br>
                    </span>
                }
            </govuk-summary-list-row-value>
        </govuk-summary-list-row>
    }
}

</govuk-summary-list>
</div>
</div>

@if (Model.HasFreeholder() && !(isRas || isSocialSector))
{
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <p class="govuk-body govuk-!-font-size-24 govuk-!-font-weight-bold">
                Freeholder
            </p>
        </div>
        @if (!Model.ReadOnly)
        {
            <div class="govuk-grid-column-one-third govuk-text-align-right">
                <a href=@Url.Action("ChangeAnswers", "ResponsibleEntities") class="govuk-link">Change your answers</a>
            </div>
        }
    </div>

    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
            <govuk-summary-list>

                @if (Model.FreeholderIndividualOrCompany is not null)
                {
                    <govuk-summary-list-row>
                        <govuk-summary-list-row-key>
                            Individual or company?
                        </govuk-summary-list-row-key>
                        <govuk-summary-list-row-value>
                            @Model.FreeholderIndividualOrCompany
                        </govuk-summary-list-row-value>
                    </govuk-summary-list-row>
                }

                @if (Model.FreeholderResponsibleEntityTypeId == (int)EResponsibleEntityType.Company)
                {
                    if (!string.IsNullOrEmpty(Model.FreeholderCompanyDetails))
                    {
                        var details = Model.FreeholderCompanyDetails.Split(',').ToList();

                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>
                                Freeholder details check (Company)
                            </govuk-summary-list-row-key>
                            <govuk-summary-list-row-value>
                                @foreach (var item in details)
                                {
                                    <span>
                                        @item<br>
                                    </span>
                                }
                            </govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                    }

                    if (!string.IsNullOrEmpty(Model.FreeholderAddress))
                    {
                        var details = Model.FreeholderAddress.Split(',').ToList();

                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>
                                Freeholder details check (Company Address)
                            </govuk-summary-list-row-key>
                            <govuk-summary-list-row-value>
                                @foreach (var item in details.Where(item => !string.IsNullOrWhiteSpace(item)))
                                {
                                    <span>
                                        @item<br>
                                    </span>
                                }
                            </govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                    }
                }
                else
                {
                    if (!string.IsNullOrEmpty(Model.FreeholderDetails))
                    {
                        var details = Model.FreeholderDetails.Split(',').ToList();

                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>
                                Freeholder details check (Individual)
                            </govuk-summary-list-row-key>
                            <govuk-summary-list-row-value>
                                @foreach (var item in details)
                                {
                                    <span>
                                        @item<br>
                                    </span>
                                }
                            </govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                    }

                    if (!string.IsNullOrEmpty(Model.FreeholderAddress))
                    {
                        var details = Model.FreeholderAddress.Split(',').ToList();

                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>
                                Freeholder details check (Individual Address)
                            </govuk-summary-list-row-key>
                            <govuk-summary-list-row-value>
                                @foreach (var item in details.Where(item => !string.IsNullOrWhiteSpace(item)))
                                {
                                    <span>
                                        @item<br>
                                    </span>
                                }
                            </govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                    }
                }
            </govuk-summary-list>
        </div>
    </div>
}

@if (Model.ResponsibleEntityResponsibleForGrantFunding.HasValue)
{
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <p class="govuk-body govuk-!-font-size-24 govuk-!-font-weight-bold">
                Signatories
            </p>
        </div>
        @if (!Model.ReadOnly)
        {
            <div class="govuk-grid-column-one-third govuk-text-align-right">
                <a href=@Url.Action("ChangeAnswers", "ResponsibleEntities") class="govuk-link">Change your answers</a>
            </div>
        }
    </div>

    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
            <govuk-summary-list>
                <govuk-summary-list-row>
                    <govuk-summary-list-row-key>
                        Responsible for grant funding?
                    </govuk-summary-list-row-key>
                    <govuk-summary-list-row-value>
                        @(Model.ResponsibleEntityResponsibleForGrantFunding!.Value ? "Yes" : "No")
                    </govuk-summary-list-row-value>
                </govuk-summary-list-row>
                                
                @foreach (var item in Model.GrantFundingSignatories.Select((value, index) => new { value, index }))
                {
                     <govuk-summary-list-row>
                        <govuk-summary-list-row-key>
                            Signatory @(item.index + 1)
                        </govuk-summary-list-row-key>
                        <govuk-summary-list-row-value>
                            <span>
                                @item.value.FullName<br>
                            </span>
                            <span>
                                @item.value.EmailAddress<br>
                            </span>
                            @if (!string.IsNullOrEmpty(item.value.Role))
                            {
                                <span>
                                    @item.value.Role<br>
                                </span>
                            }
                        </govuk-summary-list-row-value>
                    </govuk-summary-list-row>
                }
            </govuk-summary-list>
        </div>
    </div>
}

@if (!Model.ReadOnly)
{
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
            <h2 class="govuk-heading-s">Proceed to next step of your application</h2>
            <p class="govuk-body">By submitting this notification you are confirming that, to the best of your knowledge, the details you are providing are correct, and that Homes England can contact the Responsible Entity to validate you have been authorised to apply on their behalf.</p>

            <form asp-area="ResponsibleEntities" asp-controller="ResponsibleEntities" asp-action="CheckYourAnswers" method="post">
                <govuk-button type="submit">Accept and save application</govuk-button>
            </form>
        </div>
    </div>
}