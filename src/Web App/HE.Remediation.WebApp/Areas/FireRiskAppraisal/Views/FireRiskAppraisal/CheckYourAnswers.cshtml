@using HE.Remediation.Core.Enums;
@using HE.Remediation.Core.Helpers;
@model HE.Remediation.WebApp.ViewModels.FireRiskAppraisal.CheckYourAnswersViewModel
@{
    ViewData["Title"] = Model.ReadOnly ? "Your answers" : "Check your answers";
    ViewData["BackLink"] = Url.Action("CompletedAppraisal", "FireRiskAppraisal", new { Area = "FireRiskAppraisal" });
    ViewData["ReadOnly"] = Model.ReadOnly;
    ViewData["ReturnUrl"] = "CheckYourAnswers";
    ViewData["FullWidth"] = true;            
}

<h1 class="govuk-heading-xl">@ViewData["Title"]</h1>

<h2 class="govuk-heading-m">Report and Summary</h2>
<govuk-summary-list>    
    <govuk-summary-list-row>
        <govuk-summary-list-row-key>
            Fire risk appraisal report
        </govuk-summary-list-row-key>
        <govuk-summary-list-row-value>
            @if (!String.IsNullOrEmpty(Model.AppraisalReportFilename))
            {
                <span>@Model.AppraisalReportFilename</span>
            }             
        </govuk-summary-list-row-value>
        @if (!Model.ReadOnly)
        {
            <govuk-summary-list-row-action href="@Url.Action("UploadFireRiskAppraisalReport", "FireRiskAppraisal", new { returnUrl = ViewData["ReturnUrl"] })" visually-hidden-text="name">
                Change
            </govuk-summary-list-row-action>
        }
    </govuk-summary-list-row>    

    <govuk-summary-list-row>
        <govuk-summary-list-row-key>
            Fire risk appraisal summary
        </govuk-summary-list-row-key>
        <govuk-summary-list-row-value>
            @if (!String.IsNullOrEmpty(Model.AppraisalSummaryFilename))
            {
                <span>@Model.AppraisalSummaryFilename</span>
            }
        </govuk-summary-list-row-value>
        @if (!Model.ReadOnly)
        {
            <govuk-summary-list-row-action href="@Url.Action("UploadFireRiskAppraisalReport", "FireRiskAppraisal", new { returnUrl = ViewData["ReturnUrl"] })" visually-hidden-text="name">
                Change
            </govuk-summary-list-row-action>
        }
    </govuk-summary-list-row>
</govuk-summary-list>

<h2 class="govuk-heading-m">Appraisal survey details</h2>
<govuk-summary-list>
    <govuk-summary-list-row>
        <govuk-summary-list-row-key>
            Company who did the survey
        </govuk-summary-list-row-key>
        <govuk-summary-list-row-value>
            @if (!String.IsNullOrEmpty(Model.FireRiskAssessorCompany))
            {
                <span>@Model.FireRiskAssessorCompany</span>
            }
        </govuk-summary-list-row-value>
        @if (!Model.ReadOnly)
        {
            <govuk-summary-list-row-action href="@Url.Action("AppraisalSurveyDetails", "FireRiskAppraisal", new { returnUrl = ViewData["ReturnUrl"] })" visually-hidden-text="name">
                Change
            </govuk-summary-list-row-action>            
        }
    </govuk-summary-list-row>

    <govuk-summary-list-row>
        <govuk-summary-list-row-key>
            Date you instructed the company
        </govuk-summary-list-row-key>
        <govuk-summary-list-row-value>
            @if (Model.DateOfInstruction != null)
            {
                <span>@Model.DateOfInstruction.Value.ToString("dd/MM/yyyy")</span>
            }            
        </govuk-summary-list-row-value>

        @if (!Model.ReadOnly)
        {
            <govuk-summary-list-row-action href="@Url.Action("AppraisalSurveyDetails", "FireRiskAppraisal", new { returnUrl = ViewData["ReturnUrl"] })" visually-hidden-text="name">
                Change
            </govuk-summary-list-row-action>
        }        
    </govuk-summary-list-row>

    <govuk-summary-list-row>
        <govuk-summary-list-row-key>
            Survey date
        </govuk-summary-list-row-key>
        <govuk-summary-list-row-value>
            @if (Model.SurveyDate != null)
            {
                <span>@Model.SurveyDate.Value.ToString("dd/MM/yyyy")</span>
            }
        </govuk-summary-list-row-value>
        @if (!Model.ReadOnly)
        {
            <govuk-summary-list-row-action href="@Url.Action("AppraisalSurveyDetails", "FireRiskAppraisal", new { returnUrl = ViewData["ReturnUrl"] })" visually-hidden-text="name">
                    Change
            </govuk-summary-list-row-action>
        }
    </govuk-summary-list-row>
</govuk-summary-list>


<h2 class="govuk-heading-m">Report details</h2>
<govuk-summary-list>
    <govuk-summary-list-row>
        <govuk-summary-list-row-key>
            How many storeys does the building have?
        </govuk-summary-list-row-key>
        <govuk-summary-list-row-value>
            @if (Model.NumberOfStoreys != null)
            {
                <span>@Model.NumberOfStoreys.ToString()</span>
            }
        </govuk-summary-list-row-value>
        @if (!Model.ReadOnly)
        {
            <govuk-summary-list-row-action href="@Url.Action("ReportDetails", "FireRiskAppraisal", new { returnUrl = ViewData["ReturnUrl"] })" visually-hidden-text="name">
                Change
            </govuk-summary-list-row-action>
        }
    </govuk-summary-list-row>

    <govuk-summary-list-row>
        <govuk-summary-list-row-key>
            What is the height of the building in metres?
        </govuk-summary-list-row-key>
        <govuk-summary-list-row-value>
            @if (Model.BuildingHeight != null)
            {
                <span>@Model.BuildingHeight.ToString()</span>
            }
        </govuk-summary-list-row-value>
        @if (!Model.ReadOnly)
        {
            <govuk-summary-list-row-action href="@Url.Action("ReportDetails", "FireRiskAppraisal", new { returnUrl = ViewData["ReturnUrl"] })" visually-hidden-text="name">
                Change
            </govuk-summary-list-row-action>            
        }        
    </govuk-summary-list-row>

    <govuk-summary-list-row>
        <govuk-summary-list-row-key>
            Name of author of report
        </govuk-summary-list-row-key>
        <govuk-summary-list-row-value>
            @if (!String.IsNullOrEmpty(Model.AuthorsName))
            {
                <span>@Model.AuthorsName</span>
            }            
        </govuk-summary-list-row-value>
        @if (!Model.ReadOnly)
        {
            <govuk-summary-list-row-action href="@Url.Action("ReportDetails", "FireRiskAppraisal", new { returnUrl = ViewData["ReturnUrl"] })" visually-hidden-text="name">
                Change
            </govuk-summary-list-row-action>
        }
    </govuk-summary-list-row>

    <govuk-summary-list-row>
        <govuk-summary-list-row-key>
            Name of person conducting peer review
        </govuk-summary-list-row-key>
        <govuk-summary-list-row-value>

            @if (!String.IsNullOrEmpty(Model.PeerReviewPerson))
            {
                <span>@Model.PeerReviewPerson</span>
            }            
        </govuk-summary-list-row-value>
        @if (!Model.ReadOnly)
        {
            <govuk-summary-list-row-action href="@Url.Action("ReportDetails", "FireRiskAppraisal", new { returnUrl = ViewData["ReturnUrl"] })" visually-hidden-text="name">
                Change
            </govuk-summary-list-row-action>            
        }
    </govuk-summary-list-row>
    
    <govuk-summary-list-row>
        <govuk-summary-list-row-key>
            Cost of FRAEW report (exclusive of VAT)
        </govuk-summary-list-row-key>
        <govuk-summary-list-row-value>
            @if (Model.FraewCost.HasValue)
            {
                <span>&pound;@Model.FraewCost.Value.ToString("N2")</span>
            }
            else
            {
                <span>-</span>
            }
        </govuk-summary-list-row-value>
        @if (!Model.ReadOnly)
        {
            <govuk-summary-list-row-action href="@Url.Action("ReportDetails", "FireRiskAppraisal", new { returnUrl = ViewData["ReturnUrl"] })" visually-hidden-text="name">
                Change
            </govuk-summary-list-row-action> 
        }
    </govuk-summary-list-row>

    <govuk-summary-list-row>
        <govuk-summary-list-row-key>
            Is the FRAEW assessment basic or complex?
        </govuk-summary-list-row-key>
        <govuk-summary-list-row-value>            
            @if (Model.BasicComplexType != null)
            {
                string interimDisplayText = string.Empty;
                if (Model.BasicComplexType == EBasicComplexType.Basic)
                {
                    interimDisplayText = "Basic";
                }
                else if (Model.BasicComplexType == EBasicComplexType.Complex)
                {
                    interimDisplayText = "Complex";
                }
                <span>@interimDisplayText</span>
            }
        </govuk-summary-list-row-value>
        @if (!Model.ReadOnly)
        {
            <govuk-summary-list-row-action href="@Url.Action("ReportDetails", "FireRiskAppraisal", new { returnUrl = ViewData["ReturnUrl"] })" visually-hidden-text="name">
                Change
            </govuk-summary-list-row-action>
        }        
    </govuk-summary-list-row>
</govuk-summary-list>

<h2 class="govuk-heading-m">Interim Measures, Strategies and Access</h2>
<govuk-summary-list>
    <govuk-summary-list-row>
        <govuk-summary-list-row-key>
            Is the building in interim measures?
        </govuk-summary-list-row-key>
        <govuk-summary-list-row-value>
            @if(Model.BuildingInterimMeasures is not null)
            {
                <span>@HE.Remediation.Core.Helpers.EnumHelpers.GetText((EYesNoNonBoolean)Model.BuildingInterimMeasures)</span>
            }
        </govuk-summary-list-row-value>
        @if (!Model.ReadOnly)
        {
            <govuk-summary-list-row-action href="@Url.Action("InterimMeasures", "FireRiskAppraisal", new { returnUrl = ViewData["ReturnUrl"] })" visually-hidden-text="name">
                Change
            </govuk-summary-list-row-action>
        }
    </govuk-summary-list-row>

    <govuk-summary-list-row>
        <govuk-summary-list-row-key>
            If yes, what type of interim measures are in place?
        </govuk-summary-list-row-key>
        <govuk-summary-list-row-value>
            @{
                if (Model.BuildingInterimMeasuresTypes.Any()) {
                    var measures = new List<string>();

                    foreach (var measure in Model.BuildingInterimMeasuresTypes)
                    {
                        measures.Add(HE.Remediation.Core.Helpers.EnumHelpers.GetText(measure));
                    }
                    <span>@string.Join(", ", measures)</span>
                }
                else
                {
                    <span>None</span>
                }
            }
        </govuk-summary-list-row-value>
        @if (!Model.ReadOnly)
        {
            <govuk-summary-list-row-action href="@Url.Action("InterimMeasures", "FireRiskAppraisal", new { returnUrl = ViewData["ReturnUrl"] })" visually-hidden-text="name">
                Change
            </govuk-summary-list-row-action>
        }
    </govuk-summary-list-row>
     
    <govuk-summary-list-row>
        <govuk-summary-list-row-key>
            What is the current evacuation strategy?
        </govuk-summary-list-row-key>
        <govuk-summary-list-row-value>
            @if(Model.EvacuationStrategyType is not null)
            {
                <span>@HE.Remediation.Core.Helpers.EnumHelpers.GetText((EEvacuationStrategy)Model.EvacuationStrategyType)</span>
            }
            
        </govuk-summary-list-row-value>
        @if (!Model.ReadOnly)
        {
            <govuk-summary-list-row-action href="@Url.Action("InterimMeasures", "FireRiskAppraisal", new { returnUrl = ViewData["ReturnUrl"] })" visually-hidden-text="name">
                Change
            </govuk-summary-list-row-action>
        }
    </govuk-summary-list-row>

    <govuk-summary-list-row>
        <govuk-summary-list-row-key>
            What are the number of stairwells?
        </govuk-summary-list-row-key>
        <govuk-summary-list-row-value>
            @if (Model.NumberOfStairwells != null)
            {
                <span>@Model.NumberOfStairwells.ToString()</span>
            }
            else
            {
                <span>Not specified</span>
            }
        </govuk-summary-list-row-value>
        @if (!Model.ReadOnly)
        {
            <govuk-summary-list-row-action href="@Url.Action("InterimMeasures", "FireRiskAppraisal", new { returnUrl = ViewData["ReturnUrl"] })" visually-hidden-text="name">
                Change
            </govuk-summary-list-row-action>
        }
    </govuk-summary-list-row>

    <govuk-summary-list-row>
        <govuk-summary-list-row-key>
            Are there management policies in place for the external wall and balconies?
        </govuk-summary-list-row-key>
        <govuk-summary-list-row-value>
            @if(Model.ExternalWallAndBalconiesPolicy is not null)
            {
                <span>@HE.Remediation.Core.Helpers.EnumHelpers.GetText((EYesNoNonBoolean)Model.ExternalWallAndBalconiesPolicy)</span>
            }
        </govuk-summary-list-row-value>
        @if (!Model.ReadOnly)
        {
            <govuk-summary-list-row-action href="@Url.Action("InterimMeasures", "FireRiskAppraisal", new { returnUrl = ViewData["ReturnUrl"] })" visually-hidden-text="name">
                Change
            </govuk-summary-list-row-action>
        }
    </govuk-summary-list-row>

    <govuk-summary-list-row>
        <govuk-summary-list-row-key>
            Does the building have any fire & rescue service access restrictions?
        </govuk-summary-list-row-key>
        <govuk-summary-list-row-value>
            @if(Model.FireAndResueAccessRestrictions is not null)
            {
                <span>@HE.Remediation.Core.Helpers.EnumHelpers.GetText((EYesNoNonBoolean)Model.FireAndResueAccessRestrictions)</span>
            }
        </govuk-summary-list-row-value>
        @if (!Model.ReadOnly)
        {
            <govuk-summary-list-row-action href="@Url.Action("InterimMeasures", "FireRiskAppraisal", new { returnUrl = ViewData["ReturnUrl"] })" visually-hidden-text="name">
                Change
            </govuk-summary-list-row-action>
        }
    </govuk-summary-list-row>

    <govuk-summary-list-row>
        <govuk-summary-list-row-key>
            If yes, what are the fire & rescue service access restrictions?
        </govuk-summary-list-row-key>
        <govuk-summary-list-row-value>
            <span>@Model.FireAndResueAccessRestrictionsText</span>
        </govuk-summary-list-row-value>
        @if (!Model.ReadOnly)
        {
            <govuk-summary-list-row-action href="@Url.Action("InterimMeasures", "FireRiskAppraisal", new { returnUrl = ViewData["ReturnUrl"] })" visually-hidden-text="name">
                Change
            </govuk-summary-list-row-action>
        }
    </govuk-summary-list-row>
</govuk-summary-list>



<h2 class="govuk-heading-m">Cladding Systems</h2>
<govuk-summary-list>
    <govuk-summary-list-row>
        <govuk-summary-list-row-key>
            What is the approximate total area of the cladding which you are recommending is subject to 
            full or partial remediation / mitigation to address life safety risk of the building? (Square metres)
        </govuk-summary-list-row-key>
        <govuk-summary-list-row-value>
            @if (Model.RecommendTotalAreaCladding.HasValue)
            {
                <span>@Model.RecommendTotalAreaCladding.Value.ToString("N0")m<sup>2</sup></span>
            }
            else
            {
                <span>Not specified</span> 
            }
        </govuk-summary-list-row-value>
        @if (!Model.ReadOnly)
        {
            <govuk-summary-list-row-action href="@Url.Action("WorksToCladdingCladdingArea", "FireRiskAppraisal", new { returnUrl = ViewData["ReturnUrl"] })" visually-hidden-text="name">
                Change
            </govuk-summary-list-row-action>
        }
    </govuk-summary-list-row>
</govuk-summary-list>
@if ((Model.CladdingSystems != null) && (Model.CladdingSystems.Count > 0))
{
    @for (var itemCounter = 0; itemCounter < Model.CladdingSystems.Count; itemCounter++)
    {
        <govuk-summary-list>
            <govuk-summary-list-row style="font-size: 21px;">
                <govuk-summary-list-row-key>
                    Cladding System @((itemCounter + 1).ToString())
                </govuk-summary-list-row-key>
                <govuk-summary-list-row-value>
                </govuk-summary-list-row-value>
                @if (!Model.ReadOnly)
                {
                    <govuk-summary-list-row-action href="@Url.Action("WorksToCladdingSystems", "FireRiskAppraisal", new { returnUrl = ViewData["ReturnUrl"] })" visually-hidden-text="name">
                        Change
                    </govuk-summary-list-row-action>
                }
            </govuk-summary-list-row>
            </govuk-summary-list>
            <govuk-summary-list>
            <govuk-summary-list-row>
                <govuk-summary-list-row-key>
                    Cladding type
                </govuk-summary-list-row-key>
                <govuk-summary-list-row-value>

                    @if (!String.IsNullOrEmpty(Model.CladdingSystems[itemCounter].CladdingSystemTypeName))
                    {
                        <span>@Model.CladdingSystems[itemCounter].CladdingSystemTypeName</span>
                        @if (Model.CladdingSystems[itemCounter].CladdingSystemTypeName == "Other")
                        {
                            <span> - </span>
                            <span>@Model.CladdingSystems[itemCounter].OtherCladdingType</span>
                        }
                    }                        
                </govuk-summary-list-row-value>                
            </govuk-summary-list-row>

            <govuk-summary-list-row>
                <govuk-summary-list-row-key>
                    Cladding manufacturer
                </govuk-summary-list-row-key>
                <govuk-summary-list-row-value>

                    @if (!String.IsNullOrEmpty(Model.CladdingSystems[itemCounter].CladdingManufacturerName))
                    {
                        if (Model.CladdingSystems[itemCounter].CladdingManufacturerName == "Other")
                        {
                                <span>@Model.CladdingSystems[itemCounter].CladdingManufacturerName</span>
                                <span> - </span>
                                <span>@Model.CladdingSystems[itemCounter].OtherCladdingManufacturer</span>
                        }
                        else
                        {
                                <span>@Model.CladdingSystems[itemCounter].CladdingManufacturerName</span>
                        }                    
                    }
                </govuk-summary-list-row-value>
            </govuk-summary-list-row>

            <govuk-summary-list-row>
                <govuk-summary-list-row-key>
                    Insulation material
                </govuk-summary-list-row-key>
                <govuk-summary-list-row-value>
                    @if (!String.IsNullOrEmpty(Model.CladdingSystems[itemCounter].InsulationTypeName))
                    {
                        <span>@Model.CladdingSystems[itemCounter].InsulationTypeName</span>
                        @if (Model.CladdingSystems[itemCounter].InsulationTypeName == "Other")
                        {
                            <span> - </span>
                            <span>@Model.CladdingSystems[itemCounter].OtherInsulationType</span>
                        }
                    }
                </govuk-summary-list-row-value>                
            </govuk-summary-list-row>

        <govuk-summary-list-row>
            <govuk-summary-list-row-key>
                Insulation manufacturer
            </govuk-summary-list-row-key>
            <govuk-summary-list-row-value>
                @if (!String.IsNullOrEmpty(Model.CladdingSystems[itemCounter].CladdingManufacturerName))
                {                                                
                    if (Model.CladdingSystems[itemCounter].InsulationManufacturerName == "Other")
                    {
                        <span>@Model.CladdingSystems[itemCounter].InsulationManufacturerName</span>
                        <span> - </span>
                        <span>@Model.CladdingSystems[itemCounter].OtherInsulationManufacturer</span>
                    }
                    else
                    {
                        <span>@Model.CladdingSystems[itemCounter].InsulationManufacturerName</span>
                    }
                }
            </govuk-summary-list-row-value>
        </govuk-summary-list-row>
        </govuk-summary-list>
    }
}
<h2 class="govuk-heading-m">External Systems</h2>
<govuk-summary-list>
    <govuk-summary-list-row>
        <govuk-summary-list-row-key>
            Are there any other elements of the external wall in addition to the cladding system(s)
            which you are recommending are subject
            to remediation/mitigation works to address the life safety risk you have identified?
        </govuk-summary-list-row-key>
        <govuk-summary-list-row-value>
            @if (Model.ExternalWorksRequired != null)
            {
                string externalWorksRequiredDisplayText = Model.ExternalWorksRequired == ENoYes.Yes ? "Yes" : "No";
                <span>@externalWorksRequiredDisplayText</span>
            }
        </govuk-summary-list-row-value>
        @if (!Model.ReadOnly)
        {
            <govuk-summary-list-row-action href="@Url.Action("ExternalWorksRequired", "FireRiskAppraisal", new { returnUrl = ViewData["ReturnUrl"] })" visually-hidden-text="name">
                Change
            </govuk-summary-list-row-action>
        }
    </govuk-summary-list-row>

    @if ((Model.ExternalWorks != null) && (Model.ExternalWorks.Count > 0))
    {
        @if ((Model.ExternalWorksRequired != null) && (Model.ExternalWorksRequired == ENoYes.Yes))
        {
            @for (var itemCounter = 0; itemCounter < Model.ExternalWorks.Count; itemCounter++)
            {
                <govuk-summary-list-row>
                    <govuk-summary-list-row-key>
                        @((itemCounter + 1).ToString()). Other external wall element
                    </govuk-summary-list-row-key>
                    <govuk-summary-list-row-value>
                        @Model.ExternalWorks[itemCounter].Description
                    </govuk-summary-list-row-value>
                    @if (!Model.ReadOnly)
                    {
                        <govuk-summary-list-row-action href="@Url.Action("ExternalWallWorks", "FireRiskAppraisal", new { returnUrl = ViewData["ReturnUrl"] })" visually-hidden-text="name">
                            Change
                        </govuk-summary-list-row-action>
                    }
                </govuk-summary-list-row>
            }
        }    
    }    
</govuk-summary-list>


<h2 class="govuk-heading-m">Internal elements</h2>
<govuk-summary-list>
    <govuk-summary-list-row>
        <govuk-summary-list-row-key>
            Are there any elements of the interior of the building 
            which you are recommending are subject
            to remediation/mitigation works to address the life safety risk you have identified?
        </govuk-summary-list-row-key>
        <govuk-summary-list-row-value>
            @if (Model.InternalWorksRequired != null)
            {
                string internalWorksRequiredDisplayText = Model.InternalWorksRequired == ENoYes.Yes ? "Yes" : "No";
                <span>@internalWorksRequiredDisplayText</span>
            }
        </govuk-summary-list-row-value>
        @if (!Model.ReadOnly)
        {
            <govuk-summary-list-row-action href="@Url.Action("InternalWorksRequired", "FireRiskAppraisal", new { returnUrl = ViewData["ReturnUrl"] })" visually-hidden-text="name">
                Change
            </govuk-summary-list-row-action>
        }
    </govuk-summary-list-row>

    @if ((Model.InternalWorks != null) && (Model.InternalWorks.Count > 0))
    {
        @if ((Model.InternalWorksRequired != null) && (Model.InternalWorksRequired == ENoYes.Yes))
        {
            @for (var itemCounter = 0; itemCounter < Model.InternalWorks.Count; itemCounter++)
            {
                <govuk-summary-list-row>
                    <govuk-summary-list-row-key>
                        @((itemCounter + 1).ToString()). Internal element
                    </govuk-summary-list-row-key>
                    <govuk-summary-list-row-value>
                        @Model.InternalWorks[itemCounter].Description
                    </govuk-summary-list-row-value>
                    @if (!Model.ReadOnly)
                    {
                        <govuk-summary-list-row-action href="@Url.Action("InternalWallWorks", "FireRiskAppraisal", new { returnUrl = ViewData["ReturnUrl"] })" visually-hidden-text="name">
                            Change
                        </govuk-summary-list-row-action>
                    }
                </govuk-summary-list-row>
            }
        }
    }
</govuk-summary-list>


<h2 class="govuk-heading-m">Recommended works</h2>
<govuk-summary-list>
    <govuk-summary-list-row>
        <govuk-summary-list-row-key>
            What is your assessment of the life safety risk of the building associated with the external wall systems,
            in accordance with PAS-9980?
        </govuk-summary-list-row-key>
        <govuk-summary-list-row-value>
            @if (!String.IsNullOrEmpty(Model.LifeSafetyRiskAssessment))
            {
                <span>@Model.LifeSafetyRiskAssessment</span>
            }
        </govuk-summary-list-row-value>
        @if (!Model.ReadOnly)
        {
            <govuk-summary-list-row-action href="@Url.Action("RecommendedWorks", "FireRiskAppraisal", new { returnUrl = ViewData["ReturnUrl"] })" visually-hidden-text="name">
                Change
            </govuk-summary-list-row-action>            
        }
    </govuk-summary-list-row>

    <govuk-summary-list-row>
        <govuk-summary-list-row-key>
            Do you recommend full replacement of cladding, partial replacement of cladding or no replacement of cladding (alternative mitigation works only)?
        </govuk-summary-list-row-key>
        <govuk-summary-list-row-value>
            @if (!String.IsNullOrEmpty(Model.RecommendCladding))
            {
                <span>@Model.RecommendCladding</span>
            }            
        </govuk-summary-list-row-value>
        @if (!Model.ReadOnly)
        {
            <govuk-summary-list-row-action href="@Url.Action("RecommendedWorks", "FireRiskAppraisal", new { returnUrl = ViewData["ReturnUrl"] })" visually-hidden-text="name">
                Change
            </govuk-summary-list-row-action>            
        }
    </govuk-summary-list-row>

    <govuk-summary-list-row>
        <govuk-summary-list-row-key>
            What are the potential courses of action for remediation/mitigation to address the life safety risk of the building?
            <br />
            <br />
            Please note that any works that are not the removal of unsafe cladding will only be funded if they are proportional mitigation works to allow unsafe cladding to remain in place.
        </govuk-summary-list-row-key>
        <govuk-summary-list-row-value>
            @if (Model.SafetyRiskMitigationOptions is not null && Model.SafetyRiskMitigationOptions.Any())
            {
                foreach (var item in Model.SafetyRiskMitigationOptions)
                {
                    if(item != ERiskSafetyMitigationType.Other)
                    {
                        <span>@SafetyRiskOptions.GetOptionQuestion(item)</span>
                    }
                    else
                    {
                        <span>@($"{SafetyRiskOptions.GetOptionQuestion(item)} - {Model.SafetyRiskOtherText}")</span>
                    }
                    <br />
                    <br />
                }
            }
            else
            {
                <span>None</span>
            }
        </govuk-summary-list-row-value>
        @if (!Model.ReadOnly)
        {
            <govuk-summary-list-row-action href="@Url.Action("RecommendedWorks", "FireRiskAppraisal", new { returnUrl = ViewData["ReturnUrl"] })" visually-hidden-text="name">
                Change
            </govuk-summary-list-row-action>
        }
    </govuk-summary-list-row>

    <govuk-summary-list-row>
        <govuk-summary-list-row-key>
            Please summarise the most cost effective course of action from the options listed above that will remediate the life safety risk. This is the option that will be funded through the cladding scheme.
        </govuk-summary-list-row-key>
        <govuk-summary-list-row-value>
            @if (!String.IsNullOrEmpty(Model.RemediationSummary))
            {
                <span>@Model.RemediationSummary</span>
            }
        </govuk-summary-list-row-value>
        @if (!Model.ReadOnly)
        {
            <govuk-summary-list-row-action href="@Url.Action("RecommendedWorks", "FireRiskAppraisal", new { returnUrl = ViewData["ReturnUrl"] })" visually-hidden-text="name">
                Change
            </govuk-summary-list-row-action>
        }
    </govuk-summary-list-row>
    
    <govuk-summary-list-row>
        <govuk-summary-list-row-key>
            What other options did you consider instead of the preferred choice you identified above?
        </govuk-summary-list-row-key>
        <govuk-summary-list-row-value>
            @if (!String.IsNullOrEmpty(Model.OtherRiskMitigationOptionsConsidered))
            {
                <span>@Model.OtherRiskMitigationOptionsConsidered</span>
            }
        </govuk-summary-list-row-value>
        @if (!Model.ReadOnly)
        {
            <govuk-summary-list-row-action href="@Url.Action("RecommendedWorks", "FireRiskAppraisal", new { returnUrl = ViewData["ReturnUrl"] })" visually-hidden-text="name">
                Change
            </govuk-summary-list-row-action>
        }
    </govuk-summary-list-row>
    
    <govuk-summary-list-row>
        <govuk-summary-list-row-key>
            Please state any caveats or limitations on the conclusions in your FRAEW
        </govuk-summary-list-row-key>
        <govuk-summary-list-row-value>
            @if (!String.IsNullOrEmpty(Model.CaveatsLimitations))
            {
                <span>@Model.CaveatsLimitations</span>
            }
        </govuk-summary-list-row-value>
        @if (!Model.ReadOnly)
        {
            <govuk-summary-list-row-action href="@Url.Action("RecommendedWorks", "FireRiskAppraisal", new { returnUrl = ViewData["ReturnUrl"] })" visually-hidden-text="name">
                Change
            </govuk-summary-list-row-action>
        }
    </govuk-summary-list-row>

    <govuk-summary-list-row>
        <govuk-summary-list-row-key>
            Do you recommend the building be put into interim measures?
        </govuk-summary-list-row-key>
        <govuk-summary-list-row-value>
            @if (Model.RecommendBuildingInterim != null)
            {
                string recommendInterimDisplayText = Model.RecommendBuildingInterim == ENoYes.Yes ? "Yes" : "No";
                <span>@recommendInterimDisplayText</span>
            }
        </govuk-summary-list-row-value>
        @if (!Model.ReadOnly)
        {
            <govuk-summary-list-row-action href="@Url.Action("RecommendedWorks", "FireRiskAppraisal", new { returnUrl = ViewData["ReturnUrl"] })" visually-hidden-text="name">
                Change
            </govuk-summary-list-row-action>            
        }

    </govuk-summary-list-row>

    <govuk-summary-list-row>
        <govuk-summary-list-row-key>
            If yes, what type of interim measures do you recommend?
        </govuk-summary-list-row-key>
        <govuk-summary-list-row-value>
            @if (Model.InterimMeasureOptions is not null && Model.InterimMeasureOptions.Any())
            {
                foreach (var item in Model.InterimMeasureOptions)
                {
                    if(item != EInterimMeasuresType.Other)
                    {
                        <span>@InterimMeasureOptions.GetOptionQuestion(item)</span>
                    }
                    else
                    {
                        <span>@($"{InterimMeasureOptions.GetOptionQuestion(item)} - {Model.InterimMeasuresOtherText}")</span>
                    }
                    <br />
                    <br />
                }
            }
            else
            {
                <span>None</span>
            }
        </govuk-summary-list-row-value>
        @if (!Model.ReadOnly)
        {
            <govuk-summary-list-row-action href="@Url.Action("RecommendedWorks", "FireRiskAppraisal", new { returnUrl = ViewData["ReturnUrl"] })" visually-hidden-text="name">
                Change
            </govuk-summary-list-row-action>
        }

    </govuk-summary-list-row>
</govuk-summary-list>

@if (!Model.ReadOnly)
{
    <h3 class="govuk-heading-s">Proceed to next step of your application</h3>
    <p class="govuk-body">By submitting this notification you are confirming that, to the best of your knowledge, the details you are providing are correct.</p>

    <form asp-area="FireRiskAppraisal" asp-controller="FireRiskAppraisal" asp-action="CheckYourAnswers" method="post">
        <govuk-button type="submit">Accept and save application</govuk-button>
    </form>
}
