@using HE.Remediation.Core.Enums;
@using HE.Remediation.Core.Extensions
@using GovUk.Frontend.AspNetCore.TagHelpers
@using HE.Remediation.Core.Helpers
@using Microsoft.AspNetCore.Mvc.ModelBinding
@model HE.Remediation.WebApp.ViewModels.ProgressReporting.SecondaryCheckYourAnswersViewModel
@{
    ViewData["Title"] = "Progress Reporting";
    ViewData["SubTitle"] = Model.BuildingName + " (" + Model.ApplicationReferenceNumber + ")";
    ViewData["Backlink"] = Model.HelpNeeded.HasValue && Model.HelpNeeded.Value
        ? Url.Action("ProgressSupport", "ProgressReporting", new { Area = "ProgressReporting" })
        : Url.Action("SummariseProgress", "ProgressReporting", new { Area = "ProgressReporting" });
    ViewData["FullWidth"] = true;
} 

<h1 class="govuk-heading-xl">Check your answers</h1>

<govuk-summary-list>
    <govuk-summary-list-row>
        <govuk-summary-list-row-key>
            Have any of your answers changed since last month?
        </govuk-summary-list-row-key>
        <govuk-summary-list-row-value>
            &nbsp;
        </govuk-summary-list-row-value>
        <govuk-summary-list-row-action href="@Url.Action("HaveAnyAnswersChanged", "ProgressReporting", new { Area = "ProgressReporting" })">
            View
        </govuk-summary-list-row-action>
    </govuk-summary-list-row>
    <govuk-summary-list-row>
        <govuk-summary-list-row-key>
            When did you last update your leaseholders/residents on progress?
        </govuk-summary-list-row-key>
        <govuk-summary-list-row-value>
            @(Model.LastUpdate.HasValue ? Model.LastUpdate.Value.ToString("dd MMMM yyyy") : "-")
        </govuk-summary-list-row-value>
        <govuk-summary-list-row-action href="@Url.Action("LeaseholdersInformedLast", "ProgressReporting")" visually-hidden-text="name">
            Change
        </govuk-summary-list-row-action>
    </govuk-summary-list-row>

    <govuk-summary-list-row>
        <govuk-summary-list-row-key>
            Summarise your risks and blockers
        </govuk-summary-list-row-key>
        <govuk-summary-list-row-value>
            @(!string.IsNullOrEmpty(Model.ThisMonthProgressSummary) ? Model.ThisMonthProgressSummary : "-")
        </govuk-summary-list-row-value>
        <govuk-summary-list-row-action href="@Url.Action("SummariseProgress", "ProgressReporting")" visually-hidden-text="name">
            Change
        </govuk-summary-list-row-action>
    </govuk-summary-list-row>
    
    <govuk-summary-list-row>
        <govuk-summary-list-row-key>
            Do you need support?
        </govuk-summary-list-row-key>
        <govuk-summary-list-row-value>
            @(Model.HelpNeeded == true ? "Yes" : Model.HelpNeeded == false ? "No" : "-")
        </govuk-summary-list-row-value>
        <govuk-summary-list-row-action href="@Url.Action("SummariseProgress", "ProgressReporting")" visually-hidden-text="name">
            Change
        </govuk-summary-list-row-action>
    </govuk-summary-list-row>

</govuk-summary-list>



@if (Model.HelpNeeded == true)
{
    <h2 class="govuk-heading-m">What kind of support do you need?</h2>

    <govuk-summary-list>
        <govuk-summary-list-row>
            <govuk-summary-list-row-key>
                Type of support
            </govuk-summary-list-row-key>
            <govuk-summary-list-row-value>
                @if (Model.SupportTypes?.Any() == true)
                {
                    var supportTypes = Model.SupportTypes.Select(supportType => EnumHelpers.GetText(supportType)).ToList();

                    <span>@string.Join(", ", supportTypes)</span>
                }
                else
                {
                    <span>None</span>
                }
            </govuk-summary-list-row-value>
            <govuk-summary-list-row-action href="@Url.Action("ProgressSupport", "ProgressReporting")" visually-hidden-text="name">
                Change
            </govuk-summary-list-row-action>
        </govuk-summary-list-row>

        <govuk-summary-list-row>
            @{
                var supportNeededReasonClass = string.Empty;
                if (ViewData.ModelState.TryGetValue(nameof(Model.SupportNeededReason), out var validationResult))
                {
                    if (validationResult.ValidationState == ModelValidationState.Invalid)
                    {
                        supportNeededReasonClass = "govuk-form-group--error govuk-error-message govuk-!-margin-bottom-0";
                    }
                }
            }
            <govuk-summary-list-row-key>
                <div class="@supportNeededReasonClass" id="@nameof(Model.SupportNeededReason)">
                    Tell us about the support you need
                </div>
            </govuk-summary-list-row-key>
            <govuk-summary-list-row-value>
                @(!string.IsNullOrEmpty(Model.SupportNeededReason) ? Model.SupportNeededReason : "-")
            </govuk-summary-list-row-value>
            <govuk-summary-list-row-action href="@Url.Action("ProgressSupport", "ProgressReporting")" visually-hidden-text="name">
                Change
            </govuk-summary-list-row-action>
        </govuk-summary-list-row>
    </govuk-summary-list>
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <h2 class="govuk-heading-m">Proceed to next step of your application</h2>
        <p class="govuk-body">
            By submitting this notification you are confirming that, to the best of
            your knowledge, the details you are providing are correct.
        </p>
    </div>
</div>

<form asp-area="ProgressReporting" asp-controller="ProgressReporting" asp-action="SecondaryCheckYourAnswers" method="post">

    <input asp-for="ApplicationReferenceNumber" type="hidden" value="@Model.ApplicationReferenceNumber" />
    <input asp-for="BuildingName" type="hidden" value="@Model.BuildingName" />
    <govuk-date-input asp-for="LastUpdate" class="hidden" value="@Model.LastUpdate" />
    <input asp-for="ThisMonthProgressSummary" type="hidden" value="@Model.ThisMonthProgressSummary" />
    <input asp-for="NextMonthProgressSummary" type="hidden" value="@Model.NextMonthProgressSummary" />
    <input asp-for="HelpNeeded" type="hidden" value="@Model.HelpNeeded" />
    <input asp-for="SupportNeededReason" type="hidden" value="@Model.SupportNeededReason" />
    
    @if (Model.SupportTypes?.Any() == true)
    {
        for (var i = 0; i < Model.SupportTypes.Count; i++)
        {
            <input name="SupportTypes[@i]" type="hidden" value="@Model.SupportTypes[i]"/>
        }
    }

    <div class="comp-btn-group">
        <govuk-button name="SubmitAction" value="@ESubmitAction.Continue">Submit</govuk-button>
    </div>
</form>